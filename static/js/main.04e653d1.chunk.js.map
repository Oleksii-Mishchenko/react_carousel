{"version":3,"sources":["components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handleCarouselButton","direction","props","images","imageSize","step","frameSize","infinite","expectedShift","maxPosition","length","spaceLeft","setState","prevImageSize","prevFrameSize","this","curImageSize","curFrameSize","precisePosition","animationDuration","canShiftLeft","canShiftRight","className","style","width","transform","transitionDuration","transitionTimingFunction","map","image","index","src","alt","height","type","onClick","disabled","Component","App","action","htmlFor","id","defaultValue","min","max","onChange","ev","value","currentTarget","checked","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04e653d1.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  imageSize: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  position: number,\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  componentDidUpdate({\n    imageSize: prevImageSize,\n    frameSize: prevFrameSize,\n  }: Props) {\n    const {\n      imageSize: curImageSize,\n      frameSize: curFrameSize,\n      images,\n    } = this.props;\n    const { position } = this.state;\n\n    if (curImageSize !== prevImageSize) {\n      const positionIndex = position / prevImageSize;\n      const precisePosition = positionIndex * curImageSize;\n\n      this.setState({ position: precisePosition });\n    }\n\n    if (curFrameSize !== prevFrameSize) {\n      const maxPosition\n        = (images.length * curImageSize) - (curFrameSize * curImageSize);\n\n      const precisePosition = -maxPosition > position\n        ? -maxPosition\n        : position;\n\n      this.setState({ position: precisePosition });\n    }\n  }\n\n  handleCarouselButton = (direction: 'Next' | 'Prev') => {\n    let { position } = this.state;\n    const {\n      images,\n      imageSize,\n      step,\n      frameSize,\n      infinite,\n    } = this.props;\n    const expectedShift = imageSize * step;\n    const minPosition = 0;\n    const maxPosition = (images.length * imageSize) - (frameSize * imageSize);\n\n    if (direction === 'Next') {\n      const spaceLeft = maxPosition + position;\n      const shift = expectedShift > spaceLeft\n        ? spaceLeft\n        : expectedShift;\n      const expectedPosition = position - shift;\n\n      position = infinite && spaceLeft <= 0\n        ? minPosition\n        : expectedPosition;\n    }\n\n    if (direction === 'Prev') {\n      const spaceLeft = minPosition - position;\n      const shift = expectedShift > spaceLeft\n        ? spaceLeft\n        : expectedShift;\n      const expectedPosition = position + shift;\n\n      position = infinite && spaceLeft <= 0\n        ? -maxPosition\n        : expectedPosition;\n    }\n\n    this.setState({ position });\n  };\n\n  render() {\n    const { position } = this.state;\n    const {\n      images,\n      animationDuration,\n      imageSize,\n      frameSize,\n      infinite,\n    } = this.props;\n    const carouselWidth = images.length * imageSize;\n    const frameWidth = frameSize * imageSize;\n    const canShiftLeft = position >= 0;\n    const canShiftRight = position <= -(carouselWidth - frameWidth);\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__frame\"\n          style={{ width: imageSize * frameSize }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${position}px)`,\n              transitionDuration: `${animationDuration}ms`,\n              transitionTimingFunction: 'ease-in-out',\n            }}\n          >\n            {images.map((image, index) => {\n              return (\n                <li\n                  key={image}\n                  className=\"Carousel__item\"\n                >\n                  <img\n                    src={image}\n                    alt={`Smile # ${index}`}\n                    className=\"Carousel__image\"\n                    style={{\n                      width: imageSize,\n                      height: imageSize,\n                    }}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            onClick={() => {\n              this.handleCarouselButton('Prev');\n            }}\n            disabled={!infinite\n              && canShiftLeft}\n          >\n            {'< '}\n            Prev\n          </button>\n\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            className=\"Carousel__button\"\n            onClick={() => {\n              this.handleCarouselButton('Next');\n            }}\n            disabled={!infinite\n              && canShiftRight}\n          >\n            Next\n            {' >'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  animationDuration: number,\n  imageSize: number,\n  frameSize: number,\n  step: number,\n  infinite: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    animationDuration: 1000,\n    imageSize: 130,\n    frameSize: 3,\n    step: 3,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      imageSize,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"App__title\"\n          data-cy=\"title\"\n        >\n          Carousel with\n          {' '}\n          {images.length}\n          {' '}\n          images\n        </h1>\n        <form action=\"#\" className=\"App__form\">\n          <fieldset className=\"App__form-fieldset\">\n            <legend className=\"App__form-description\">\n              Customize carousel\n            </legend>\n\n            <div className=\"App__form-item\">\n              <div className=\"App__form-item-name\">\n                <label\n                  htmlFor=\"itemId\"\n                  className=\"App__form-item-label\"\n                >\n                  Items width\n                </label>\n              </div>\n\n              <div className=\"App__form-item-value\">\n                <input\n                  type=\"number\"\n                  id=\"itemId\"\n                  defaultValue={imageSize}\n                  min={50}\n                  max={500}\n                  step={10}\n                  className=\"App__form-item-input\"\n                  onChange={(ev) => {\n                    const { value } = ev.currentTarget;\n\n                    this.setState({ imageSize: +value });\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"App__form-item\">\n              <div className=\"App__form-item-name\">\n                <label\n                  htmlFor=\"frameId\"\n                  className=\"App__form-item-label\"\n                >\n                  Frame size\n                </label>\n              </div>\n\n              <div className=\"App__form-item-value\">\n                <input\n                  type=\"number\"\n                  id=\"frameId\"\n                  defaultValue={frameSize}\n                  min={1}\n                  max={images.length}\n                  step={1}\n                  className=\"App__form-item-input\"\n                  onChange={(ev) => {\n                    const { value } = ev.currentTarget;\n\n                    this.setState({ frameSize: +value });\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"App__form-item\">\n              <div className=\"App__form-item-name\">\n                <label\n                  htmlFor=\"stepId\"\n                  className=\"App__form-item-label\"\n                >\n                  Step\n                </label>\n              </div>\n\n              <div className=\"App__form-item-value\">\n                <input\n                  type=\"number\"\n                  id=\"stepId\"\n                  defaultValue={step}\n                  min={1}\n                  max={images.length}\n                  step={1}\n                  className=\"App__form-item-input\"\n                  onChange={(ev) => {\n                    const { value } = ev.currentTarget;\n\n                    this.setState({ step: +value });\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"App__form-item\">\n              <div className=\"App__form-item-name\">\n                <label\n                  htmlFor=\"duration\"\n                  className=\"App__form-item-label\"\n                >\n                  Duration\n                </label>\n              </div>\n\n              <div className=\"App__form-item-value\">\n                <input\n                  type=\"number\"\n                  id=\"duration\"\n                  min={300}\n                  max={5000}\n                  step={100}\n                  defaultValue={animationDuration}\n                  className=\"App__form-item-input\"\n                  onChange={(ev) => {\n                    const { value } = ev.currentTarget;\n\n                    this.setState({ animationDuration: +value });\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"App__form-item\">\n              <div className=\"App__form-item-name\">\n                <label\n                  htmlFor=\"infinite\"\n                  className=\"App__form-item-label\"\n                >\n                  Infinite\n                </label>\n              </div>\n\n              <div className=\"App__form-item-value\">\n                <input\n                  type=\"checkbox\"\n                  id=\"infinite\"\n                  className=\"App__form-item-checkbox\"\n                  onChange={(ev) => {\n                    const { checked } = ev.currentTarget;\n\n                    this.setState({ infinite: checked });\n                  }}\n                />\n              </div>\n            </div>\n          </fieldset>\n        </form>\n\n        <Carousel\n          images={images}\n          imageSize={imageSize}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}